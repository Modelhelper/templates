{
    "Key": "ts.ng.service.index.array",
    "Name": "angular-service-index-array",
    "Description": null,
    "Language": "cs",
    "CanExport": false,
    "ExportFileName": "",
    "ExportType": "",
    "TemplateType": 0,
    "Groups": [
        ""
    ],
    "Tags": null,
    "Body": [
        "\t// #region handle delete {{ model.Table.Name | UpperCamel }}item",
        "\t// _{{ model.Table.Name | LowerCamel | Singular}}Service: {{ model.Table.Name | UpperCamel | Singular}}Service",
        "\t// {{ model.Table.Name | LowerCamel | Plural}}: {{ model.Table.Name | UpperCamel | Plural}}ViewModel[] = [];",
        "\tget{{ model.Table.Name | UpperCamel | Plural}}(itemId: number) {",
        "\t\tthis._applicationService.get{{ model.Table.Name | UpperCamel | Plural}}(itemId).subscribe(",
        "\t\t\tresult => this.{{ model.Table.Name | LowerCamel | Plural}}= result",
        "\t\t);",
        "\t}",
        "",
        "\tconfirmDelete{{ model.Table.Name | UpperCamel }}ItemHandler(item: {{ model.Table.Name | UpperCamel | Singular }}ViewModel) {",
        "\t\tconst title = `Delete current item'?'`;",
        "\t\tconst message = 'This action is permanent and the application cannot be retrived again ';",
        "\t\tthis._commonDialogService.confirmDelete(title, message).subscribe(",
        "\t\t\tdialogResult => this.onDelete{{ model.Table.Name | UpperCamel | Singular}}ItemConfirmed(dialogResult, item.id)",
        "\t\t);",
        "\t}",
        "",
        "\tonDelete{{ model.Table.Name | UpperCamel | Singular}}ItemConfirmed(dialogResult: ConfirmationResult, itemId: number) {",
        "\t\tif (dialogResult.confirmed) {",
        "\t\t\tthis._{{ model.Table.Name | LowerCamel | Singular}}Service.delete(itemId).subscribe(",
        "\t\t\t\tresult => this.on{{ model.Table.Name | UpperCamel | Singular}}ItemDeleted(result),",
        "\t\t\t\terror => this.onError(error.error)",
        "\t\t\t);",
        "\t\t}",
        "\t}",
        "",
        "\ton{{ model.Table.Name | UpperCamel | Singular}}ItemDeleted(result: DeletedResult) {\t\t",
        "\t\tconst message = result.deleted ? \"the item was deleted\" : \"could not delete item\";",
        "\t\tthis.get{{ model.Table.Name | UpperCamel | Plural}}(this.applicationId);",
        "\t\tthis._toaster.toast(message);",
        "\t}",
        "",
        "\t// #endregion",
        ""
    ]
}