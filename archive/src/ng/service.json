{
  "Key": "ts.ng.service",
  "Name": "angular-service",
  "Description": null,
  "Language": "cs",
  "CanExport": true,
  "ExportFileName": "{{model.Table.Name | KebabCase | Singular}}.service.ts",
  "ExportType": "ng.services",
  "TemplateType": 0,
  "Groups": ["ng-spa", "ng-shared"],
  "Tags": null,
  "Body": [
    "import { Injectable } from '@angular/core';",
    "import { HttpClient } from '@angular/common/http';",
    "import { Observable } from 'rxjs/Observable';",
    "import { environment } from '../../../environments/environment';{% capture modelName %}{{model.Table.Name | UpperCamel | Singular}}{% endcapture %}",
    "",
    "// Application specific imports",
    "import { {{model.Table.Name | UpperCamel | Singular}} } from '../models/{{model.Table.Name | KebabCase | Singular}}.model';",
    "{% if model.IncludeRelations == true %}import { {{model.Table.Name | UpperCamel | Singular}}ViewModel } from '../view-models/{{model.Table.Name | KebabCase | Singular}}.view-model';{% endif %}",
    "{%- if (model.IncludeRelations == true) %}{%- for child in model.Table.ChildRelations %}{% if child.GroupIndex == 1 -%}{%- capture childName -%}{{child.Name | UpperCamel | Singular}}{%- endcapture -%}",
    "{%- if modelName != childName -%}import { {{child.Name | UpperCamel | Singular}}ViewModel } from '../view-models/{{child.Name | KebabCase | Singular}}.view-model';{%- endif %}",
    "{%- endif -%}{%- endfor -%}",
    "{% endif  %}",
    "@Injectable({",
    "\tprovidedIn: 'root'",
    "})",
    "export class {{model.Table.Name | UpperCamel | Singular}}Service {",
    "{% capture resourceList %}{% for pk in model.Table.PrimaryKeys %}/$ASCII123{{pk.Name | LowerCamel}}ASCII124{% endfor %}{% endcapture %}",
    "\tconstructor(private http: HttpClient) { }",
    "",
    "\tget{{model.Table.Name | UpperCamel | Plural }}(): Observable<{{model.Table.Name | UpperCamel | Singular}}ViewModel[]> {",
    "\t\treturn this.http.get<{{model.Table.Name | UpperCamel | Singular}}ViewModel[]>(`${environment.apiUrl}/api/{{model.Table.Name | LowerCamel | Plural}}`);",
    "\t}",
    "",
    "\tget{{model.Table.Name | UpperCamel | Singular }}({% primaryKeyList TypeScript %}): Observable<{{model.Table.Name | UpperCamel | Singular}}> {",
    "\t\treturn this.http.get<{{model.Table.Name | UpperCamel | Singular}}>(`${environment.apiUrl}/api/{{model.Table.Name | LowerCamel | Plural}}{{ resourceList}}`);",
    "\t}",
    "",
    "\tcreate({{model.Table.Name | LowerCamel | Singular}}: {{model.Table.Name | UpperCamel | Singular}}): Observable<{{model.Table.Name | UpperCamel | Singular}}> {",
    "\t\treturn this.http.post<{{model.Table.Name | UpperCamel | Singular}}>(`${environment.apiUrl}/api/{{model.Table.Name | LowerCamel | Plural}}`, {{model.Table.Name | LowerCamel | Singular}});",
    "\t}",
    "",
    "\tupdate({% primaryKeyList TypeScript %}, {{model.Table.Name | LowerCamel | Singular}}: {{model.Table.Name | UpperCamel | Singular}}): Observable<{{model.Table.Name | UpperCamel | Singular}}> {",
    "\t\treturn this.http.put<{{model.Table.Name | UpperCamel | Singular}}>(`${environment.apiUrl}/api/{{model.Table.Name | LowerCamel | Plural}}{{ resourceList}}`, {{model.Table.Name | LowerCamel | Singular}});",
    "\t}",
    "",
    "\tdelete({% primaryKeyList TypeScript %}): Observable<any> {",
    "\t\treturn this.http.delete(`${environment.apiUrl}/api/{{model.Table.Name | LowerCamel | Plural}}{{ resourceList}}`);",
    "\t}",
    "{% if model.IncludeRelations == true %}{%- for child in model.Table.ChildRelations %}{% if child.GroupIndex == 1 %}",
    "\tget{{child.Name | UpperCamel | Plural }}({% primaryKeyList TypeScript %}): Observable<{{child.Name | UpperCamel | Singular}}ViewModel[]> {",
    "\t\treturn this.http.get<{{child.Name | UpperCamel | Singular}}ViewModel[]>(`${environment.apiUrl}/api/{{model.Table.Name | LowerCamel | Plural}}{{resourceList}}/{{child.ModelName | LowerCamel | Plural}}`);",
    "\t}",
    "{%- endif %}{% endfor %}",
    "{% endif  %}",
    "}",
    "",
    ""
  ]
}
