version: 3
language: go
type: block
short: This template will generate the body for getting a child list from database. Must be inside func and expects a db obj
key: model
model: entity
body: |  
  // Get{{ .Name | pascal | plural }} returns a list of {{ .Name | pascal | singular }} as child of {{ .OwnerName | pascal | singular }}
  func (r *{{ .OwnerName | singular | camel }}Repo) Get{{ .NameWithoutPrefix | pascal | plural }}(ctx context.Context, {{ .RelatedColumn.Name | camel }} {{ .RelatedColumn.DataType | datatype }}) ([]*models.{{ .Name | singular }}Model, error) {
    conn, err := r.conn.Get(ctx)
    if err != nil {
      return nil, errors.Wrap(err, "GetList.Handle: get conn")
    }
    defer conn.Close()

    query := `{{ template "sql-ms-select-child-items" . }}`

    rows, err := conn.QueryContext(ctx, query, sql.Named("{{ .RelatedColumn.Name | pascal }}", {{ .RelatedColumn.Name | camel }}))

    if err != nil {
      return nil, err
    }
    defer rows.Close()

    var items []*models.{{ .Name | singular | pascal }}Model
    for rows.Next() {
      var (
        item models.{{ .Name | singular | pascal }}Model
      )
      err = rows.Scan(
        {{ range .Columns -}}
        &item.{{ .Name | pascal }},
        {{ end }}
      )
      if err != nil {
        return nil, err
      }

      items = append(items, &item)
    }

    return items, nil
  }
  