Version: 3
Groups: ['']
Tags: []
Body: "if Object_Id('{{ model.Table.Schema }}.{{ model.Table.Name}}') is not null \r\n    drop table {{ model.Table.Schema }}.{{ model.Table.Name}};\r\n\r\ncreate table {{ model.Table.Schema }}.{{ model.Table.Name}} ( \r\n{%- for c in model.Table.AllColumns -%}{%- capture dataLen %}{% if c.Length < 0 %}max{% else %}{{ c.Length }}{%endif%}{%endcapture-%}\r\n      {% if forloop.first == false %}, {% endif %}{{ c.Name }} {{ c.DataType }}{%if c.UseLength %}({{dataLen}}){%endif%}{% if c.IsNullable == false %} not{% endif %} null{%if c.IsIdentity %} identity{%endif%}\r\n    {%-endfor-%}\r\n);\r\n\r\n-- Primary Key {% capture pkList %}{% for pk in model.Table.PrimaryKeys %}{{ pk.Name }}{% if forloop.last == false %}, {% endif %}{% endfor %}{% endcapture %}\r\nalter table {{ model.Table.Name}} add constraint PK_CLUSTERED_{{ model.Table.Name}} PRIMARY KEY CLUSTERED ({{ pkList }})\r\n{% if model.IncludeParents %}\r\n-- Relations for this table\r\n{%- for relation in model.Table.ParentRelations -%}\r\nalter table {{ model.Table.Schema }}.{{ model.Table.Name}} add constraint FK_{{ model.Table.Name}}_{{ relation.ChildColumnName }}_{{ relation.Name }}_{{ relation.ParentColumnName }} foreign key ({{ relation.ChildColumnName }}) references {{ relation.Schema}}.{{ relation.Name }}({{ relation.ParentColumnName }});\r\n{%- endfor -%}{% endif %}\r\n"
