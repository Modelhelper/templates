ExportKey: api.interfaces
Version: 3
CanExport: true
ExportFileName: I{{model.Table.Name | UpperCamel | Singular}}Repository.cs
Groups: [GraphQLCore]
Tags: []
Body: "{%- capture queryOption -%}{{ model.QueryOptions.ClassName }} queryOption{% endcapture %}\r\nusing System;\r\nusing System.Linq;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\n{%- if model.UseQueryOptions -%}using {{model.QueryOptions.Namespace}};{%- endif %}\r\nusing {{model.Namespaces[\"api.models\"]}};\r\n\r\nnamespace {{model.Namespaces[\"api.interfaces\"]}}\r\n{ \r\n{% capture className %}{{model.Table.Name | UpperCamel | Singular}}{% endcapture %}\r\n	public partial interface I{{model.Table.Name | UpperCamel | Singular}}Repository\r\n	{\r\n		Task<{{className}}> Get({% primaryKeyList cs %}{% if model.UseQueryOptions %}, {{ queryOption }}{% endif %});\r\n		Task<IEnumerable<{{className}}{%- if model.IncludeParents == true -%}{%- endif -%}>> Get({% if model.UseQueryOptions %}{{ queryOption }}{% endif %});\r\n		Task<{{className}}> Create({{className}} item{% if model.UseQueryOptions %}, {{ queryOption }}{% endif %});\r\n		Task<{{className}}> Update({% primaryKeyList cs %}, {{className}} item{% if model.UseQueryOptions %}, {{ queryOption }}{% endif %});\r\n		Task<bool> Delete({% primaryKeyList cs %}{% if model.UseQueryOptions %}, {{ queryOption }}{% endif %});\r\n		//Task<ILookup<{{ child.ParentColumnType  | CSharp }}, {{ child.Name | UpperCamel | Singular }}>> Get{{child.ModelName | UpperCamel | Plural}}(IEnumerable<{{ child.ParentColumnType | CSharp}}> {{ child.ParentColumnName | LowerCamel | Plural}});\r\n{%- for child in model.Table.ChildRelations -%}{%- if child.GroupIndex == 1 -%}\r\n		Task<ILookup<{{ child.ParentColumnType  | CSharp }}, {{ child.Name | UpperCamel | Singular }}>> Get{{child.ModelName | UpperCamel | Plural}}(IEnumerable<{{ child.ParentColumnType | CSharp}}> {{ child.ParentColumnName | LowerCamel | Plural}});\r\n{% endif -%}{%- endfor %}\r\n	}\r\n\r\n}\r\n\r\n\r\n"
